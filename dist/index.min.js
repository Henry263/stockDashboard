/**
 * Created by harshilkumar on 3/16/17.
 */


$(function() {

        function getLocalStorage_chart(){
            console.log("from main file");
            var _get_stock_lc = localStorage.getItem("stockObject123");
            var stc_json_lc = JSON.parse(_get_stock_lc);
            //console.log(stc_json_lc);
            var localStoreArray = [];

            $.each(stc_json_lc, function (key, val) {

                localStoreArray.push(key);

            });
            copyLocalStockArray = localStoreArray;
            gethistoricData();
        }

    //Calling function
    var copyLocalStockArray = [];
    var cahrtObject = {};

    var arryCounter = 0;
    var chartArray = [];

    var current_d = 0;
    var year_before_d = 0;

    var now_d = new Date();

    var curr_day = now_d.getDate();
    var curr_month = now_d.getMonth();
    curr_month = curr_month + 1;
    var curr_year = now_d.getFullYear();

    var year_before = curr_year - 1;

    if(curr_month < 10)
    {
        curr_month = "0"+curr_month;
    }
    current_d = curr_year+'-'+curr_month+'-'+curr_day;
    year_before_d = year_before+'-'+curr_month+'-'+curr_day;

    function isEmpty_str(value) {
        return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
    }

    function isEmpty(obj) {
        for (var key in obj) {
            if (obj.hasOwnProperty(key))
                return false;
        }
        return true;
    }

    function enable_chart_btn() {
        console.log("Enabling the chart button.");
        $("div.panel_buttons").find("#chart_icon").removeAttr("style");
    }


    function gethistoricData() {
        //console.log("Inside get json function"+st_symbol);
        var default_counter = arryCounter;
        var loop_init_val = copyLocalStockArray[default_counter];

        var historicDataurl = 'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.historicaldata%20where%20symbol%20%3D%20%22'+copyLocalStockArray[arryCounter]+'%22%20and%20startDate%20%3D%20%22'+year_before_d+'%22%20and%20endDate%20%3D%20%22'+current_d+'%22&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=';
        //var historicDataurl = 'http://query.yahooapis.com/v1/public/yql?q=select * from yahoo.finance.historicaldata where symbol = '+copyLocalStockArray[arryCounter]+' and startDate = '+year_before_d+' and endDate = '+current_d+'&format=json&diagnostics=true&env=store://datatables.org/alltableswithkeys&callback=';
        $.ajax({
            //url: 'http://finance.google.com/finance/info?client=ig&q=nasdaq:MSFT',
            url: historicDataurl,
            data: {
                format: 'json'
            },
            error: function () {
                console.log("Error while getting data");
            },
            //dataType: 'jsonp',
            success: function (data) {
                arryCounter++;
                if(arryCounter <= copyLocalStockArray.length) {


                    for (var i = 0; i < data.query.results.quote.length; i++) {

                        var arrid = " ";
                        var strDate = 0;
                        //arrid = generateid();
                        arrid = [];

                        cahrtObject = {};
                        var strDate = data.query.results.quote[i]["Date"];
                        arrid.push(strDate);

                        arrid.push(data.query.results.quote[i]["High"]);
                        arrid.push(data.query.results.quote[i]["Low"]);
                        arrid.push(data.query.results.quote[i]["Open"]);
                        arrid.push(data.query.results.quote[i]["Close"]);

                        //console.log(arrid);
                        chartArray.push(arrid);
                    }

                    cahrtObject[loop_init_val] = chartArray;
                    console.log(cahrtObject);
                    detailChart(chartArray, loop_init_val);

                }
                else
                {
                    console.log("loop finish");
                    enable_chart_btn();
                    //$('i.ichar').css('display','inline-block');
                }

            },type: 'GET'
        });
    }

    function generateid()
    {
        var text = "";
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        for( var i=0; i < 3; i++ )
            text += possible.charAt(Math.floor(Math.random() * possible.length));

        return text;
    }
    /*----------------------
     This is chart dialog
     *---------------------------*/
    $('#open_chart').click(function() {

    });
    $(document).on("click", "#chart_icon", function () {
        //var icon_chart_symbol = $(this).parents('div.first_row').find(".stc_name_style").text();
        var icon_chart_symbol = $(this).parent().next().text();
        var div_symbol_id = "chart_dialog_"+icon_chart_symbol;
        $("[id^='chart_dialog']").each(function () {
            var compare_id = $(this).attr('id');
            if(div_symbol_id != compare_id)
            {
                $(this).slideUp();
            }
            else
            {
                $(this).slideDown();
            }
        });
        $('.stc_panel_container').css('display','none');
    });
    $(document).on("click", "i.close_btn", function () {
        var compare_icon_id = $(this).parent().next().attr('id');
        var div_icon_id = $(this).parent().parent();
        compare_icon_id = compare_icon_id.substring(0, compare_icon_id.indexOf('_'));
        compare_icon_id = "chart_dialog_"+compare_icon_id;
        var divIdSymbol = div_icon_id.attr('id');
        $("[id^='chart_dialog']").each(function () {

            if(divIdSymbol == compare_icon_id)
            {
                div_icon_id.slideUp();
            }
        });
        $('.stc_panel_container').css('display','block');
        //$('#chart_dialog').toggle("slide");
    });

    function detailChart(stcArry, get_symbol) {

        var temp_symbol = "stc_lbl_"+get_symbol;
                $('div.stc_panel_container').find('.st_panel').each(function () {
                    var div_symbol_id = $(this).find('.stc_panel_holder').attr('id');
                    if (temp_symbol == div_symbol_id) {
                        var uniquesymbol = get_symbol + "_chart";
                        var chart_id_symbol = "chart_dialog_" + get_symbol;
                        //console.log("Inside draw chart function"+uniquesymbol);
                        var char_container = '<div class="each_chart_holder" id="' + chart_id_symbol + '" style="display: none;"> ' +
                            '<div class="close_btn_chart">' +
                            '<i class="fa fa-times close_btn" aria-hidden="true"></i></div> ' +
                            ' <div id="' + uniquesymbol + '" class="chart_contaner"></div> ' +
                            ' </div> ';

                        //console.log("Inside draw chart function"+char_container);

                        var stc_arry = stcArry;
                        // create data table on loaded data
                        var dataTable = anychart.data.table();
                        dataTable.addData(stc_arry);

                        // map loaded data
                        var line_1_mapping = dataTable.mapAs({'value': 3});
                        var line_2_mapping = dataTable.mapAs({'value': 2});
                        var line_3_mapping = dataTable.mapAs({'value': 4});
                        var line_4_mapping = dataTable.mapAs({'value': 1});

                        // create stock chart
                        chart = anychart.stock();

                        // create first plot on the chart with column series
                        var firstPlot = chart.plot(0);
                        var series_1 = firstPlot.line(line_1_mapping);
                        var series_2 = firstPlot.line(line_2_mapping);
                        var series_3 = firstPlot.line(line_3_mapping);
                        var series_4 = firstPlot.line(line_4_mapping);

                        series_1.stroke("#558B2F");
                        series_2.stroke("#D84315");
                        series_3.stroke("#FF8F00");
                        series_4.stroke("blue");

                        series_1.name("High");
                        series_2.name("Low");
                        series_3.name("Close");
                        series_4.name("Open");

                        var legend = firstPlot.legend();
                        // enables legend
                        legend.enabled(true);

                        // turn the title on and set the position
                        legend.title(true);
                        legend.title().orientation('top').align('left');
                        //legend.align('center');

                        // format the title
                        legend.titleFormatter(function () {
                            return get_symbol;
                        });

                        //enable the titleSeparator
                        legend.titleSeparator(true);
                        // set legend position and items layout
                        firstPlot.legend().itemsLayout('horizontal');
                        firstPlot.legend().position('top');

                        // setting the space between the items
                        legend.itemsSpacing(10);

                        // enable the scroller
                        chart.scroller().enabled(true);

                        // adjust the scroller
                        //chart.selectRange('2014-01-02','2014-02-03');

                        // set container id for the chart
                        $(char_container).insertAfter($('div.eachstock'));
                        chart.container(uniquesymbol);

                        // adjust the scroller axis
                        var labels = chart.scroller().xAxis().labels();
                        var minorLabels = chart.scroller().xAxis().minorLabels();
                        // create scroller series with mapped data
                        chart.scroller().column(line_3_mapping);

                        // initiate chart drawing
                        chart.draw();

                    }

                });
                chartArray.length = 0;
                gethistoricData();

    }

/**
 * Created by harshilkumar on 3/30/17.
 */

//$(document).ready(function() {

    Storage.prototype.setObject = function (key, value) {
        this.setItem(key, JSON.stringify(value));
    }
    Storage.prototype.getObject = function (key) {
        var value = this.getItem(key);

        return value && JSON.parse(value);
    }
    var timerObj;
    var inittimer = 0;

    $("body").on("click", "#menu-btn", function () {
        $(".hem-menu").toggle("slow")
    });
    //localStorage.removeItem("stockObject123");
    //localStorage.removeItem("userUniqKey123");
    // Remove the existing local storage.
    //localStorage.setObject("stockObject123"," ");
    //localStorage.setObject("userUniqKey123", " ");
    var default_stocks = {
        "AAPL":{
            "BuyPrice":"139.89",
            "Quantity":"10",
            "TotalInvest":"1398.90",
            "upWatch":"2",
            "downWatch":"1"
        },
        "MU":{
            "BuyPrice":"26.89",
            "Quantity":"300",
            "TotalInvest":"8067.00",
            "upWatch":"29",
            "downWatch":"1"
        },
        "FB":{
            "BuyPrice":"142.89",
            "Quantity":"20",
            "TotalInvest":"2857.80",
            "upWatch":"10",
            "downWatch":"1"
        }
    };
    function getPortfolioChart(portfolio_chart_array) {
        $('#portfolioChart').empty();

            var arry_for_chart = portfolio_chart_array


            // create data
            var data = arry_for_chart;

            // create a pie chart and set the data
            chart = anychart.pie(data);

            // set the inner radius
            // (to turn the pie chart into a doughnut chart)
            chart.innerRadius("20%");

            // set the position of labels
            chart.labels().position("outside");

            // configure connectors
            chart.connectorStroke({color: "#595959", thickness: 2, solid:"2 2"});

            // disable the legend
            chart.legend(true);

            // set the chart title
            chart.title("Your portfolio breakdown");

            var legend = chart.legend();
            legend.position("top");
            legend.align("left");
            // making the legend vertical
            legend.itemsLayout('vertical');
            // setting the space between the items
            legend.itemsSpacing(1);

            // Get chart padding.
            var padding = chart.padding();

            padding.top("10px");
            padding.right("10px");
            padding.bottom("10px");
            padding.left("10px");

            // set the container id
            chart.container("portfolioChart");

            // initiate drawing the chart
            chart.draw();


    }

    var stc_panel = '<div class="st_panel"><div class="stc_panel_holder" id="stc_lbl">' +
        '<div class="panel_buttons">' +
        '<div class="chart_groups edit_disable" id="done_icon"><span>Done</span><span><i class="fa fa-check-circle front_icons " aria-hidden="true"></i></span></div>' +
        '<div class="chart_groups" id="edit_icon"><span>Edit</span><span><i class="fa fa-pencil-square-o front_icons" aria-hidden="true"></i></span></div>' +
        '<div class="chart_groups" style="display: none;" id="chart_icon"><span>Chart</span><span><i class="fa fa-line-chart front_icons ichar" aria-hidden="true"></i></span></div>' +
        '<div class="chart_groups" id="trash_icon"><span>Delete</span><span><i class="fa fa-trash front_icons" aria-hidden="true"></i></span></div></div>' +
        '<div class="stc_name pnl-row1" id="stc"></div>' +
        '<div class="pnl-row1-space">(</div> <div class="real_time_change pnl-row1"> <span class="chng_icon_up">' +
        '<i class="fa fa-caret-up up-doen-resize" aria-hidden="true"></i></span><span class="chng_icon_down">' +
        '<i class="fa fa-caret-down up-doen-resize" aria-hidden="true"></i></span> <span class="change_dlr_sign">' +
        '<i class="fa fa-usd icon_size" aria-hidden="true"></i> </span><span class="change_dlr" id="stc_change_dlr"></span>' +
        '</div> <div class="pnl-row1-space">,</div> <div class="real_time_change pnl-row1"> <span class="chng_icon_up">' +
        '<i class="fa fa-caret-up up-doen-resize" aria-hidden="true"></i></span> <span class="chng_icon_down">' +
        '<i class="fa fa-caret-down up-doen-resize" aria-hidden="true"></i></span><span class="change_prcnt_sign">' +
        '<i class="fa fa-percent icon_size" aria-hidden="true"></i></span> <span class="change_prcnt" id="stc_change_prcnt"></span>' +
        '</div> <div class="pnl-row1-space">)</div> <div class="curnt_net_val pnl-row2">' +
        '<div class="net_label">Current Portfolio($) <i class="fa fa-arrow-right" aria-hidden="true"></i></div>' +
        '<div class="net_val" id="stc_net_val"></div> </div> <div class="pnl-row3"><div class="left_por">' +
        '<div class="qty_lbl">Volume</div> <input type="text" id="iput_vol" class="edit_disable"><div class="qty val_spacing" id="stc_qty"></div> </div> <div class="right_por">' +
        '<div class="net_diff_lbl">Difference($)</div> <div class="val_spacing" id="stc_dffrnt"></div> </div> </div>' +
        '<div class="pnl-row4"> <div class="left_part"> <div class="_lbl_enty all_lbls head_lbl_enty">Entity</div>' +
        '<div class="invest_prce_lbl all_lbls head_lbl_invest">Invested@($)</div>' +
        '<div class="curnt_prce_lbl_head all_lbls head_lbl_current">Current@($)</div> </div> <div class="right_part">' +
        '<div class="chld_row1"> <div class="curnt_prce_lbl all_lbls"> <div class=" ">Price</div> </div> <div class="val_container">' +
        '<div class="invest_prce all_lbls val-width" id="stc_invest_lbl"></div><input type="text" id="iput_prce"  class="edit_disable">' +
        '<div class="curernt_prce all_lbls val-width" id="stc_currnt_lbl"></div> </div></div>' +
        '<div class="chld_row2"> <div class="all_lbls diff"> <div class=" ">Total($)</div> </div> <div class="total_val_container">' +
        '<div class="invest_val all_lbls val-width" id="stc_invest_val"></div>' +
        '<div class="curernt_val all_lbls val-width" id="stc_current_val"></div> </div> </div> </div> </div> </div></div>';

    function isEmpty(obj) {
        for (var key in obj) {
            if (obj.hasOwnProperty(key))
                return false;
        }
        return true;
    }
    $(".slidingDiv").hide();
    $(".visible_tab").hide();

    $('.show_hide').click(function(){
        $(this).next(".slidingDiv").slideToggle();
        $(this).find('span').toggleClass('hidden_tab visible_tab');
        $(this).find('i').toggleClass('fa-chevron-down fa-chevron-up');
    });
    //------------------------------ New code for add stock -----------------------------------
    $('div.form_fields_holder').find('input').each(function () {
        $(this).blur(function () {
            loop_through_field($(this));
        });
    });
    function loop_through_field($inputField) {
        var resultFlag;
        var dataAttr = $inputField.data("intype");
        //console.log($inputField);
        if (dataAttr == 'text') {
            var regex_alphabet = /^([A-Za-z])*$/;
            if ($inputField.val().match(regex_alphabet) && $inputField.val().length > 0) {
                console.log("look good");
                resultFlag = true;
                $inputField.removeClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").addClass("init_disable");

            }
            else {
                console.log("look not good");
                $inputField.addClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                resultFlag = false;
            }
            return resultFlag;
        }
        else if (dataAttr == 'num') {
            var regex_num = /^-?\d+(?:\.\d+)?$/;
            if ($inputField.val().match(regex_num)) {
                resultFlag = true;
                console.log("look good");
                $inputField.removeClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").addClass("init_disable");
            }
            else {
                console.log("look not good");
                $inputField.addClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                resultFlag = false;
            }
            return resultFlag;
        }
        else if (dataAttr == 'mail') {
            var regex_num = /^-?\d+(?:\.\d+)?$/;
            if($inputField.val()){
                var emailflg =  IsValidEmail($inputField.val());
                if(IsValidEmail($inputField.val()))
                {
                    // Valid email
                    console.log("Valid email id");
                    resultFlag = true;
                    console.log("look good");
                    $inputField.removeClass("errborderclass");
                    $inputField.parent().siblings(".icon-tip").addClass("init_disable");
                }
                else
                {
                    //Invalid email
                    console.log("In-Valid email id");
                    $inputField.addClass("errborderclass");
                    $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                    resultFlag = false;
                }
            }

            return resultFlag;
        }
    }
    function IsValidEmail(email) {
        var regex = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
        return regex.test(email);
    }
    function validateEachInput(isNewuser) {
        var trueFlag = 0;
        var $head_element;
        if(isNewuser)
        {
            $head_element = $('div#newUsrFields');
        }
        else
        {
            $head_element = $('div#newStockFields');
        }
        $head_element.find('input').each(function () {

            var getValidFlag = loop_through_field($(this));
            if (getValidFlag) {
                //trueFlag = 0;
            }
            else
            {
                trueFlag++;
            }
        });
        return trueFlag;
    }
    //-------------------- Above is for new stock add -------------------
    var api_string;
    var getkey_from_modal = "";
    var notifycounter = 0;

    $("body").on("click", "#add_stc", function () {
        $('#add_new_stock').trigger('click');
    });
    $("body").on("click", "#trash_icon", function () {
        $('#new_featuer_popup').trigger('click');
    });
    // Mobile Click add stock
    $("body").on("click", "#add_stc_m", function () {
        $('#add_new_stock').trigger('click');
    });
    // Mobile Click new user
    $("body").on("click", "#new_usr_m", function () {
        $('#sign_up_user').trigger('click');
    });


    $("body").on("click", "#stop_timer", function () {
        clearloop();
    });
    $("body").on("click", "#edit_icon", function () {


        $('#add_new_stock').trigger('click')
        var stok_lbl = $(this).parent().next().text(); //FB
        stok_lbl = "stc_lbl_"+stok_lbl;
        var stc_id = $(this).parent().parent().attr('id'); //stc_lbl_FB
        if(stc_id == stok_lbl)
        {
            var st_Name = $(this).parent().next().text();
            var st_Price = $(this).parent().parent().find('#stc_invest_lbl').text();
            var st_Qty = $(this).parent().parent().find('#stc_qty').text();

            var get_local_stocks = localStorage.getObject("stockObject123");

            var st_Pos = get_local_stocks[st_Name]["upWatch"];
            var st_Neg = get_local_stocks[st_Name]["downWatch"];

            $('.stc_name_txt').val(st_Name);
            $('.stc_price_txt').val(st_Price);
            $('.stc_qty_txt').val(st_Qty);

            $('.stc_pos').val(st_Pos);
            $('.stc_neg').val(st_Neg);
        }
        $('#getStockVal').addClass('none-display-class');
        $('#updateStockVal').removeClass('none-display-class');

    });
    $("body").on("click", "#add_new_stock", function () {
        var get_volume = $(this).parent().parent().find("#stc_qty").text();
        var get_invest_price = $(this).parent().parent().find("#stc_invest_lbl").text();

        $('div.form_fields_holder').find('input').each(function () {
            $(this).val("");
        });
        $('#updateStockVal').addClass('none-display-class');
        $('#getStockVal').removeClass('none-display-class');

        /*
        // hide the original label.
        $(this).parent().parent().find("#stc_invest_lbl").addClass('edit_disable');
        $(this).parent().parent().find("#stc_qty").addClass('edit_disable');

        //Copy the existing value to the input box.
        $(this).parent().parent().find("input#iput_prce").val(get_invest_price);
        $(this).parent().parent().find("input#iput_vol").val(get_volume);

        // Enabling the input for edition purpose.
        $(this).parent().parent().find("input#iput_prce").removeClass('edit_disable');
        $(this).parent().parent().find("input#iput_vol").removeClass('edit_disable');

        */

    });
    $("body").on("click", "#get_sec_key", function () {
        getkey_from_modal = $('#scrtkey').val();

        // Local storage is not there so check in Json.
        checkInJson(getkey_from_modal);
        $('#get_usr_keyModal').removeClass('open');
        $('#scrtkey').val("");
    });
    $("body").on("click", "#getStockVal", function () {
        var new_strock = true;
        var IsNewStock = true;
        processNewStockData(new_strock, IsNewStock)
    });
    $("body").on("click", "#updateStockVal", function () {
        var new_strock = true;
        var Is_New_stock = false;
        processNewStockData(new_strock, Is_New_stock)
    });
    $("body").on("click", "#newportfolio", function () {
        var new_user = true;
        processuserform(new_user)
    });
    // Function to valid the user unique key.
    function checkUnqKey(uerKey) {

        if(typeof uerKey != 'undefined' && uerKey )
        {
            return true;
        }
        else {
            return false;
        }
    }
    // Process to perform analysis of new user signup form.
    function processuserform(){
        var newuser = true;
        var getValiduserinfo = validateEachInput(newuser);
        if(getValiduserinfo == 0)
        {
            var newUser = {};
            console.log("Inside the new user signup form.");
            var fName = $('.fname').val();
            var lName = $('.lname').val();
            var phone_num = $('.tel').val();

            var emailId = $('.email').val();
            var secretKey = $('.s_key').val();

            if (fName && lName && phone_num && emailId && secretKey) {
                newUser["first_name"] = fName;
                newUser["last_name"] = lName;
                newUser["phone_num"] = phone_num;
                newUser["emailID"] = emailId;
            }
            firstTimeUsrData(default_stocks, secretKey, newUser)

        }
        else
        {
            console.log("There is an error.");
        }
    }

    // Get local data from local storage.
    function getlocaldata() {
        var get_local_data = localStorage.getObject("stockObject123");
        var validate_local_data = isEmpty(get_local_data);
        if(!validate_local_data)
        {
            // Local storage has stock data.
            return get_local_data;
        }
    }
    // Get the tickers for api
    function getStockVals(StockDetailsArray, page_flag) {
        //
        var tickers = "";

        var stckName;
        if(page_flag){
            $('.stc_panel_container').empty();
            for (var key in StockDetailsArray) {

                stckName = key;
                $('.stc_panel_container').append(stc_panel);
                var id_per_stc = "";
                id_per_stc = $('#stc_lbl').attr('id');
                id_per_stc = id_per_stc+"_"+key;
                $('#stc_lbl').attr("id",id_per_stc);

                var id_panel = $('.stc_panel_holder').find('#stc');
                id_panel = "stc_"+key;
                $('.stc_panel_holder').find('#stc').attr("id",id_panel);

                $('.stc_panel_holder').find('#'+id_panel).text(key);
                tickers = tickers + stckName + ",";
            }
        }
        else
        {
            for (var key in StockDetailsArray) {

                stckName = key;
                tickers = tickers + stckName + ",";
            }
        }

        tickers = tickers.substring(0, tickers.length - 1);
        return tickers;
        // convertToServerTimeZone(tickers, StockDetailsArray);
        //console.log(tickers);
    }

    // Get secret key from local storage.
    function getJsonkey() {
        var getkey_fromdb = localStorage.getObject("userUniqKey123");
        if(getkey_fromdb){
            // key found un json and also data set in local storage
            validate_userkey();
        }
        else
        {
            //get_usr_keyModal
            $('#get_usr_keyModal').removeClass('open');
            // Data not found in json want to offer for new user.
            $( "#newUser_key_popup" ).trigger( "click" );
        }
    }


    // Apply color based on current portfolio value.
    function apply_color($element, elem_val, icon_flag) {
        if(elem_val > 0.000)
        {
            $element.css('color','green');
            if(icon_flag)
            {
                var geticon = $element.parent().find('.fa').css('color','green');
                //console.log(geticon);
                $element.parent().find('.fa-caret-down').css('display','none');
            }
        }
        else
        {
            $element.css('color','red');
            if(icon_flag)
            {
                var geticon = $element.parent().find('.fa').css('color','red');
                //console.log(geticon);
                $element.parent().find('.fa-caret-up').css('display','none');
            }
        }

    }


    // Calling timer loop for every one minute call.
    function calltimerloop() {
        //var myTimerSpeed = 600000;
        //timerObj = setInterval(validate_userkey(),myTimerSpeed);
        var repeat_timer = false;
        var apicallstring;
        //set the interval
        timerObj = setInterval(function() {
            var _lc_stockdata_timer = getlocaldata();
            if(isEmpty(_lc_stockdata_timer))
            {
                // Object is empty needs to ask user.
            }
            else
            {
                var _local_stock_data = "";
                var getApiString = "";

                _local_stock_data = getlocaldata();
                getApiString = getStockVals(_local_stock_data, repeat_timer);
                /*
                for (var key in _lc_stockdata_timer) {
                    var stckName = key;
                    var apicallstring = apicallstring + stckName + ",";
                }
                apicallstring = apicallstring.substring(0, apicallstring.length - 1);
                */
                console.log('the interval is: '+timerObj);
                callAPI(getApiString, _local_stock_data);
            }

        }, 30000);


    }
    function clearloop() {
        clearInterval(timerObj);
    }

    // google  API call for each data

    function callAPI(apiStringVal, stocksObjectVal) {

        console.log("====== API Call ==========");
        var total_networth = 0;
        var total_invest = 0;
        var prft_loss = 0;

        console.log(apiStringVal);
        $(".eachstock").empty();
        if (apiStringVal) {
            $(".table_data_row").remove();

            var testurl = 'https://finance.google.com/finance/info?client=ig&q=nasdaq:' + apiStringVal + '';
            console.log(testurl);
            $.ajax({
                //url: 'http://finance.google.com/finance/info?client=ig&q=nasdaq:MSFT',
                url: testurl,
                data: {
                    format: 'json'
                },
                error: function () {
                    console.log("Error while getting data");
                },
                dataType: 'jsonp',
                success: function (data) {

                    var portfolio_chart_arry = [];
                    $(".table_data_row").remove();
                    if (notifycounter == 0) {
                        var generalStr = 'Hey this is headsup from notification';
                        var stockIconImage = "images/_uparrow.png";
                        //notifyMe(generalStr, stockIconImage);
                    }

                    $.each(data, function (index, value) {
                        var last_change_percentage = 0;
                        var last_change = 0;

                        var priceDifference;
                        var stock_name = value["t"]; // Stock NAme
                        var last_price = value["l"]; // Last Price
                        last_change = value["c"]; // Change since last price
                        last_change_percentage = value["cp"]; // Change percentage

                        var last_change_percentage_u = value["cp_fix"]; // Change percentage

                        var dayhigh = value["_hi"];
                        var daylow = value["_lo"];

                        var comparePrice;
                        var compareQty;
                        var compareInvetment;

                        var currentPrice = 0;
                        var currentInvestmentValue = 0;

                        var stockup;
                        var stockdown;

                        var current_portfolio_status;
                        // calling the localstock data for comparison
                        $.each(stocksObjectVal, function (sindex, svalue) {
                            if (sindex == stock_name) {

                                //console.log("Found");
                                comparePrice = svalue["BuyPrice"];
                                compareQty = svalue["Quantity"];
                                compareInvetment = svalue["TotalInvest"];

                                var temp_invest = parseFloat(compareInvetment);
                                // Calculate total investment as per invested.
                                total_invest = total_invest + temp_invest;
                                //total_invest = total_invest.toFixed(2);

                                stockup = svalue["upWatch"];
                                var upprice = stockup;
                                console.log("stockup Proce:" +stockup);
                                stockdown = svalue["downWatch"];
                                var downprice = "-"+stockdown;
                                //console.log("StockName: " + stock_name + " stockup check: " + stockup + " stockdown check: " + stockdown);
                                currentPrice = last_price - comparePrice;
                                var current_diff = currentPrice.toFixed(2);
                                currentPrice = currentPrice.toFixed(2);

                                currentInvestmentValue = last_price * compareQty;
                                currentInvestmentValue = currentInvestmentValue.toFixed(2);

                                // Calculate total investment as per current change.
                                var tmp_curnt_invest = parseFloat(currentInvestmentValue);
                                total_networth = total_networth + tmp_curnt_invest;
                                //total_networth = total_networth.toFixed(2);

                                var initialinvestment = comparePrice * compareQty;
                                initialinvestment = initialinvestment.toFixed(2);

                                current_portfolio_status =  currentInvestmentValue - initialinvestment;
                                current_portfolio_status = current_portfolio_status.toFixed(2);

                                $(".stc_panel_container").find(".st_panel").each(function (){
                                    var is_icon_color_req;
                                    var $stock_panel = $(this).find("#stc_lbl_"+stock_name);
                                    // Empty the textbox

                                    $stock_panel.find('#stc_change_dlr').text("");
                                    $stock_panel.find('#stc_change_prcnt').text("");
                                    $stock_panel.find('#stc_net_val').text("");
                                    $stock_panel.find('#stc_qty').text("");
                                    $stock_panel.find('#stc_dffrnt').text("");

                                    $stock_panel.find('#stc_invest_lbl').text("");
                                    $stock_panel.find('#stc_currnt_lbl').text("");

                                    $stock_panel.find('#stc_invest_val').text("");
                                    $stock_panel.find('#stc_current_val').text("");
                                    //----------------------------------------------
                                    $stock_panel.find('#stc_change_dlr').text(last_change);
                                    is_icon_color_req = true;
                                    apply_color($stock_panel.find('#stc_change_dlr'), last_change, is_icon_color_req);

                                    if(current_portfolio_status > 0.00)
                                    {
                                        $stock_panel.parent().css('background-color','#f3fdf5');
                                        //$(this).css('background-color','#f3fdf5');
                                    }
                                    else
                                    {
                                        $stock_panel.parent().css('background-color','#fff4f4');
                                        //$(this).css('background-color','#fff4f4');
                                    }

                                    $stock_panel.find('#stc_change_prcnt').text(last_change_percentage);
                                    apply_color($stock_panel.find('#stc_change_prcnt'), last_change_percentage, is_icon_color_req);

                                    is_icon_color_req = false;
                                    $stock_panel.find('#stc_net_val').text(current_portfolio_status);
                                    apply_color($stock_panel.find('#stc_net_val'), current_portfolio_status, is_icon_color_req);

                                    $stock_panel.find('#stc_qty').text(compareQty);
                                    $stock_panel.find('#stc_dffrnt').text(currentPrice);

                                    $stock_panel.find('#stc_invest_lbl').text(comparePrice);
                                    $stock_panel.find('#stc_currnt_lbl').text(last_price);

                                    $stock_panel.find('#stc_invest_val').text(compareInvetment);
                                    $stock_panel.find('#stc_current_val').text(currentInvestmentValue);

                                });

                                $('#stockTab tr:last').after(
                                    '<tr class="table_data_row" ><td>' + stock_name + '</td><td>' + compareQty + '</td>' +
                                    '<td>' + compareInvetment + '</td><td>' + comparePrice + '</td><td>' + last_price + '</td>' +
                                    '<td>' + current_diff + '</td><td>' + last_change + '</td><td>' + upprice + '</td>' +
                                    '<td>' + downprice + '</td><td>' + currentInvestmentValue + '</td></tr>');

                                // pass the value to draw portfolio chart function.
                                portfolio_chart_arry.push({
                                    x:   stock_name,
                                    value: currentInvestmentValue
                                });

                            }
                            var check_chart_hoder = $('.each_chart_holder').length;
                            console.log($('.each_chart_holder').length);
                            if(check_chart_hoder > 0)
                            {
                                $('i.ichar').removeAttr("style");
                                $('i.ichar').addClass("enable_show_chart_btn");
                            }
                        });

                        //console.log("**********************************************************************************************")
                        // console.log("Stock Name "+stock_name +" : Stock Last Price "+last_price + " : Change since last price $"+last_change+" : Change in percentage "+last_change_percentage+"% : Unknown percentage "+last_change_percentage_u+"%");

                        //console.log(last_change_percentage);
                    });

                    // To get net investment and value
                    console.log("Total Invested: "+total_invest.toFixed(2));
                    console.log("Total Current networth: "+total_networth.toFixed(2));
                    prft_loss = total_networth - total_invest;
                    prft_loss = parseFloat(prft_loss.toFixed(2));
                    console.log("Total Current profit or loss: "+prft_loss);

                    $('#invested_net_val').text(total_invest.toFixed(2));
                    $('#current_net_val').text(total_networth.toFixed(2));
                    $('#differ_net_val').text(prft_loss);

                    $('#invested_net_val_m').text(total_invest.toFixed(2));
                    $('#current_net_val_m').text(total_networth.toFixed(2));
                    $('#differ_net_val_m').text(prft_loss);
                    if(prft_loss > 0)
                    {
                        $('#differ_net_val').css('color','green');
                        $('#differ_net_val_m').css('color','green');
                    }
                    else
                    {
                        $('#differ_net_val').css('color','red');
                        $('#differ_net_val_m').css('color','green');
                    }


                    notifycounter++;
                    //enable_chart_btn();
                    getPortfolioChart(portfolio_chart_arry);

                    $(".eachstock").find(".perstock").each(function (){
                        var stc_last_price = $(this).find("span.cp_val").text();
                        if(stc_last_price > 0.0)
                        {
                            $(this).find("i#downar").css('display','none');
                            $(this).find("span.cp_val").css('color','green');
                            $(this).find("span.sign_vals").css('color','green');
                            $(this).addClass("positive_stocks");
                            $(this).removeClass("negative_stocks");
                        }
                        else
                        {
                            $(this).find("i#upar").css('display','none');
                            $(this).find("span.cp_val").css('color','red');
                            $(this).find("span.sign_vals").css('color','red');
                            $(this).addClass("negative_stocks");
                            $(this).removeClass("positive_stocks");
                        }
                        //console.log(stc_last_price);
                    });
                    if(inittimer == 0)
                    {
                        inittimer++;
                        getLocalStorage_chart();
                        //getLocalStorage_chart();
                        calltimerloop();

                    }

                },
                type: 'GET'
            });

        }


    }

    // Function to check each and every field for new stock form.
    function processNewStockData(getstcFlag, isnewStockFlag)
    {
        var newUsr = false;
        var getValidFlag = validateEachInput(newUsr);
        var stock_storage
        if (getValidFlag == 0) {
            if(isnewStockFlag)
            {
                // First get the existing local storage
                stock_storage = localStorage.getObject("stockObject123");
            }
            else
            {
                stock_storage = {};
            }
            // Check first if localstorage is available
            if (typeof stock_storage != 'undefined' && stock_storage) {
                //deal with value'
                stocktable = stock_storage;
            }
            else {
                var stocktable = {};
            }

            var stockAryFlag = false;
            var sName = $('.stc_name_txt').val();
            var sPrice = $('.stc_price_txt').val();
            var sQty = $('.stc_qty_txt').val();

            var sPos = $('.stc_pos').val();
            var sNeg = $('.stc_neg').val();

            if (sName && sPrice && sQty) {
                var StcName = $('.stc_name_txt').val();

                stocktable[StcName] = {};
                stocktable[StcName]["BuyPrice"] = sPrice;
                stocktable[StcName]["Quantity"] = sQty;
                var Total_Invet = sQty * sPrice;
                stocktable[StcName]["TotalInvest"] = Total_Invet.toFixed(2);
                stockAryFlag = true;

            }
            if (sPos) {
                stocktable[StcName]["upWatch"] = $('.stc_pos').val();
            }
            else {
                stocktable[StcName]["upWatch"] = "0";
            }
            if (sNeg) {
                stocktable[StcName]["downWatch"] = $('.stc_neg').val();
            }
            else {
                stocktable[StcName]["downWatch"] = $('.stc_neg').val();
            }
            if (stockAryFlag) {
                // Function coming from append data
                if(getstcFlag)
                {
                    var _lckey_newData = localStorage.getObject("userUniqKey123");
                    var keyFlag = checkUnqKey(_lckey_newData);

                    if(keyFlag)
                    {
                        //alert("Key is already present in JSON file.");
                        //encodedUsrKey = "perso"; // For testing purpose this is static
                        appendstockData(stocktable);
                        console.log(stocktable);
                    }
                }
                else
                {
                    //getNew_usr_key
                    $('#newUser_key_popup').trigger('click');
                }
                $('div.form_fields_holder').find('input').each(function () {
                    $(this).val("");
                });

            }
        }
    }

    // Function to append the data to JSON. Assume that usersecret key exist.
    function appendstockData(_appndStcData){

        var _stcName;
        var _stockData = {};
        $.each(_appndStcData, function (keyNAme, value) {
            _stcName = keyNAme;
            _stockData = value;
        });
        var unqKey = localStorage.getObject("userUniqKey123");
        var keyFlag = checkUnqKey(unqKey);

        // Key is valid or not
        if(keyFlag)
        {
            var encodedUsrKey = unqKey;
            //encodedUsrKey = "Rochir";
            var data = {"usrKey" : encodedUsrKey, "usrStcData" : _stockData, "stcName" : _stcName};
            data = JSON.stringify(data);
            console.log(data);
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: 'https://stok-dashboard.herokuapp.com/appendusrConfig',
                data: data,
                dataType: "json",
                crossDomain: true,
                complete: function() {
                    //called when complete
                    console.log('append user process complete');
                    location.reload();

                },
                success: function (data) {
                    console.log("successfully data stored in json file");
                    //callback_func(data);

                    localStorage.removeItem("stockObject123");
                    localStorage.removeItem("userUniqKey123");
                    $.each(data, function (key_ns, val_ns) {
                        if(key_ns == encodedUsrKey)
                        {
                            localStorage.setObject("stockObject123",val_ns);
                            localStorage.setObject("userUniqKey123",key_ns);
                            console.log("setting local object after appending data:");
                            var repaint_alldivs_first = true;
                            getStockVals(val_ns, repaint_alldivs_first);
                        }

                    });
                    $('#addNew_stock_modal').removeClass('open');
                    $('div.form_fields_holder').find('input').each(function () {
                        $(this).val(" ");
                    });

                    // Ultimately calling the validateuserkey function and callApi function
                    getJsonkey();
                    //console.log(data);
                    getLocalStorage_chart();
                },
                error: function (textStatus, errorThrown) {
                    console.log("Error");
                }
            });
        }
        else
        {
            // User key is not matching or not present in local storage so need to check on json file.;
            alert("Key is already present in JSON file.");
        }
    }

    // Store the JSON data of user with unique key.
    function firstTimeUsrData(_defaultStkdata, _userKey, _userInfoJson) {

        var encodedUsrKey = _userKey;
        var data = {"usrKey" : encodedUsrKey, "usrStcData" : _defaultStkdata, "userInfo": _userInfoJson}
        data = JSON.stringify(data);

        //console.log(data);
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            url: 'https://stok-dashboard.herokuapp.com/UpdateusrConfig',
            data: data,
            dataType: "json",
            crossDomain: true,
            success: function (data) {
                $('#new_signup').removeClass('open');
                console.log("successfully data stored in json file");
                //console.log(data);
                //localStorage.setObject("userUniqKey123", _userKey);
                //callback_func(data);
                localStorage.removeItem("stockObject123");
                localStorage.removeItem("userUniqKey123");
                $.each(data, function (key_nu, val_nu) {
                    if(key_nu == encodedUsrKey)
                    {
                        localStorage.setObject("stockObject123",val_nu);
                        localStorage.setObject("userUniqKey123",key_nu);
                        console.log("setting local object after appending data:");

                        /*
                        var repaint_alldivs = true;
                        getStockVals(val_nu, repaint_alldivs);
                        */
                    }

                });
                $('div.form_fields_holder').find('input').each(function () {
                    $(this).val(" ");
                });
                $('#new_signup').removeClass('open');
                // Ultimately calling the validateuserkey function and callApi function
                getJsonkey();
                getLocalStorage_chart();
            },
            error: function (textStatus, errorThrown) {
                console.log("Error");
                //callbackfn("Error getting the data")
            }
        });
    }

    function checkInJson(_keyName) {

        var string = _keyName;
        var encodedString = string;
        console.log(encodedString); // Outputs: "SGVsbG8gV29ybGQh"
        //console.log(data);
        $.ajax({
            type: "GET",
            dataType: "json",
            data: '',
            contentType: "application/json; charset=utf-8",
            url: 'https://stok-dashboard.herokuapp.com/getUsrKey/'+encodedString,
            complete: function() {
                //called when complete
                console.log('process complete');
            },
            success: function(res) {

                if (isEmpty(res)) {
                    // Here it looks like user forget the userkey so give option for new entry. (Need to develop)
                    // Object is empty (Would return true in this example)
                    //alert("There is an issue with the user key. Please check your email. for the key");
                }
                else {
                    // Result is getting the user data.
                    //console.log(res);
                    console.log('process sucess');
                    if (isEmpty(res)) {
                        // Object is empty (Would return true in this example)
                        console.log("No Stock data found from localstorage.");
                    }
                    else {

                        // Remove the existing local storage.
                        localStorage.setObject("stockObject123", "");
                        localStorage.setObject("userUniqKey123", "");

                        // Data set in local storage.
                        localStorage.setObject("stockObject123", res);
                        localStorage.setObject("userUniqKey123", _keyName);

                        ///getLocalStorage_chart();
                        // Ultimately calling the validateuserkey function and callApi function
                        getJsonkey();
                        //return true;
                    }
                    $('#get_my_key').addClass('none-display-class');
                    $('#add_new_stock').removeClass('none-display-class');

                    // For Mobile
                    $('#get_key_m').addClass('none-display-class');
                    $('#add_stc_m').removeClass('none-display-class');
                }
                getLocalStorage_chart();

            },
            error: function() {

                // Data not found in json want to offer for new user.
                $( "#newUser_key_popup" ).trigger( "click" );

                $('.portfolio_chart').empty();
                $(".eachstock").empty();
                $('.stc_panel_container').empty();

            },
        });
    }

    validate_userkey();
    function validate_userkey() {
        var get_local_storage = localStorage.getObject("userUniqKey123");

        if(get_local_storage && get_local_storage != "" && get_local_storage != null) {
            var page_load = true;
            /* Code if local storage is found */
            console.log("We have the key: "+get_local_storage);
            // Get the string for api call.
            var _lc_stockdata = "";
            var getApicallData = "";

                var _lc_stockdata = getlocaldata();
                getApicallData = getStockVals(_lc_stockdata, page_load);
                api_string = getApicallData;
                callAPI(getApicallData, _lc_stockdata);
            $('#get_my_key').addClass('none-display-class');
            $('#get_key_m').addClass('none-display-class');


        }
        else
        {
            $('#add_new_stock').addClass('none-display-class');
            $('#add_stc_m').addClass('none-display-class');
            $("#get_key_popup").trigger( "click" );

        }
    }



});