/**
 * Created by harshilkumar on 4/18/17.
 */

/**
 * Created by harshilkumar on 3/16/17.
 */


$(function () {


    Storage.prototype.setObject = function (key, value) {
        //value = JSON.stringify(value);
        this.setItem(key, value);
    }
    Storage.prototype.getObject = function (key) {
        var value = this.getItem(key);

        return value;// && JSON.parse(value);
    }

    // Remove the existing local storage.
    //localStorage.setObject("stockObject123", "");
    //localStorage.setObject("userUniqKey123", "");

    function getLocalStorage_chart() {
        gethistoricData();
    }

    //Calling function
    //var copyLocalStockArray = [];
    var cahrtObject = {};

    var arryCounter = 0;
    var chartArray = [];

    var current_d = 0;
    var year_before_d = 0;

    var now_d = new Date();

    var curr_day = now_d.getDate();
    var curr_month = now_d.getMonth();
    curr_month = curr_month + 1;
    var curr_year = now_d.getFullYear();

    var year_before = curr_year - 1;

    if (curr_month < 10) {
        curr_month = "0" + curr_month;
    }
    current_d = curr_year + '-' + curr_month + '-' + curr_day;
    year_before_d = year_before + '-' + curr_month + '-' + curr_day;

    function isEmpty_str(value) {
        return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
    }

    function isEmpty(obj) {
        for (var key in obj) {
            if (obj.hasOwnProperty(key))
                return false;
        }
        return true;
    }

    function enable_chart_btn() {
        //console.log("Enabling the chart button.");
        $("div.panel_buttons").find("#chart_icon").removeClass("none-display-class");
        $("div.panel_buttons").find("#chart_icon").removeAttr("style");
    }


    function gethistoricData() {

        $('.main_btns').addClass('none-display-class');
        //console.log("Inside get json function"+st_symbol);
        var local_news_labels = localStorage.getObject("nwsLbls");
        var nws_lbl_array = local_news_labels.split(",");

        var default_counter = arryCounter;
        var loop_init_val = nws_lbl_array[default_counter];

        var historicDataurl = 'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.historicaldata%20where%20symbol%20%3D%20%22' + nws_lbl_array[arryCounter] + '%22%20and%20startDate%20%3D%20%22' + year_before_d + '%22%20and%20endDate%20%3D%20%22' + current_d + '%22&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=';
        //var historicDataurl = 'http://query.yahooapis.com/v1/public/yql?q=select * from yahoo.finance.historicaldata where symbol = '+copyLocalStockArray[arryCounter]+' and startDate = '+year_before_d+' and endDate = '+current_d+'&format=json&diagnostics=true&env=store://datatables.org/alltableswithkeys&callback=';
        $.ajax({

            url: historicDataurl,
            data: {
                format: 'json'
            },
            error: function () {
                console.log("Error while getting data");
            },
            //dataType: 'jsonp',
            success: function (data) {
                arryCounter++;
                if (arryCounter <= nws_lbl_array.length) {


                    for (var i = 0; i < data.query.results.quote.length; i++) {

                        var arrid = " ";
                        var strDate = 0;
                        //arrid = generateid();
                        arrid = [];

                        cahrtObject = {};
                        var strDate = data.query.results.quote[i]["Date"];
                        arrid.push(strDate);

                        arrid.push(data.query.results.quote[i]["High"]);
                        arrid.push(data.query.results.quote[i]["Low"]);
                        arrid.push(data.query.results.quote[i]["Open"]);
                        arrid.push(data.query.results.quote[i]["Close"]);

                        //console.log(arrid);
                        chartArray.push(arrid);
                    }

                    cahrtObject[loop_init_val] = chartArray;
                    //console.log(cahrtObject);
                    detailChart(chartArray, loop_init_val);

                    $('.main_btns').removeClass('none-display-class');

                }
                else {
                    //console.log("loop finish");
                    enable_chart_btn();
                    //$('i.ichar').css('display','inline-block');
                }

            }, type: 'GET'
        });
    }

    function generateid() {
        var text = "";
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        for (var i = 0; i < 3; i++)
            text += possible.charAt(Math.floor(Math.random() * possible.length));

        return text;
    }

    /*----------------------
     This is chart dialog
     *---------------------------*/
    $('#open_chart').click(function () {

    });
    $(document).on("click", "#chart_icon", function () {
        //var icon_chart_symbol = $(this).parents('div.first_row').find(".stc_name_style").text();
        var icon_chart_symbol = $(this).parent().next().text();
        var div_symbol_id = "chart_dialog_" + icon_chart_symbol;
        $("[id^='chart_dialog']").each(function () {
            var compare_id = $(this).attr('id');
            if (div_symbol_id != compare_id) {
                $(this).slideUp();
            }
            else {
                $(this).slideDown();
            }
        });
        $('.stc_panel_container').css('display', 'none');
    });
    $(document).on("click", "i.close_btn", function () {
        var compare_icon_id = $(this).parent().next().attr('id');
        var div_icon_id = $(this).parent().parent();
        compare_icon_id = compare_icon_id.substring(0, compare_icon_id.indexOf('_'));
        compare_icon_id = "chart_dialog_" + compare_icon_id;
        var divIdSymbol = div_icon_id.attr('id');
        $("[id^='chart_dialog']").each(function () {

            if (divIdSymbol == compare_icon_id) {
                div_icon_id.slideUp();
            }
        });
        $('.stc_panel_container').css('display', 'block');
        //$('#chart_dialog').toggle("slide");
    });

    function detailChart(stcArry, get_symbol) {

        var temp_symbol = "stc_lbl_" + get_symbol;
        $('div.stc_panel_container').find('.st_panel').each(function () {
            var div_symbol_id = $(this).find('.stc_panel_holder').attr('id');
            if (temp_symbol == div_symbol_id) {
                var uniquesymbol = get_symbol + "_chart";
                var chart_id_symbol = "chart_dialog_" + get_symbol;
                //console.log("Inside draw chart function"+uniquesymbol);
                var char_container = '<div class="each_chart_holder" id="' + chart_id_symbol + '" style="display: none;"> ' +
                    '<div class="close_btn_chart">' +
                    '<i class="fa fa-times close_btn" aria-hidden="true"></i></div> ' +
                    ' <div id="' + uniquesymbol + '" class="chart_contaner"></div> ' +
                    ' </div> ';

                //console.log("Inside draw chart function"+char_container);

                var stc_arry = stcArry;
                // create data table on loaded data
                var dataTable = anychart.data.table();
                dataTable.addData(stc_arry);

                // map loaded data
                var line_1_mapping = dataTable.mapAs({'value': 3});
                var line_2_mapping = dataTable.mapAs({'value': 2});
                var line_3_mapping = dataTable.mapAs({'value': 4});
                var line_4_mapping = dataTable.mapAs({'value': 1});

                // create stock chart
                chart = anychart.stock();

                // create first plot on the chart with column series
                var firstPlot = chart.plot(0);
                var series_1 = firstPlot.line(line_1_mapping);
                var series_2 = firstPlot.line(line_2_mapping);
                var series_3 = firstPlot.line(line_3_mapping);
                var series_4 = firstPlot.line(line_4_mapping);

                series_1.stroke("#558B2F");
                series_2.stroke("#D84315");
                series_3.stroke("#FF8F00");
                series_4.stroke("blue");

                series_1.name("High");
                series_2.name("Low");
                series_3.name("Close");
                series_4.name("Open");

                var legend = firstPlot.legend();
                // enables legend
                legend.enabled(true);

                // turn the title on and set the position
                legend.title(true);
                legend.title().orientation('top').align('left');
                //legend.align('center');

                // format the title
                legend.titleFormatter(function () {
                    return get_symbol;
                });

                //enable the titleSeparator
                legend.titleSeparator(true);
                // set legend position and items layout
                firstPlot.legend().itemsLayout('horizontal');
                firstPlot.legend().position('top');

                // setting the space between the items
                legend.itemsSpacing(10);

                // enable the scroller
                chart.scroller().enabled(true);

                // adjust the scroller
                //chart.selectRange('2014-01-02','2014-02-03');

                // set container id for the chart
                $(char_container).insertAfter($('div.eachstock'));
                chart.container(uniquesymbol);

                // adjust the scroller axis
                var labels = chart.scroller().xAxis().labels();
                var minorLabels = chart.scroller().xAxis().minorLabels();
                // create scroller series with mapped data
                chart.scroller().column(line_3_mapping);

                // initiate chart drawing
                chart.draw();

            }

        });
        chartArray.length = 0;
        gethistoricData();

    }

    var timerObj;
    var inittimer = 0;

    $("body").on("click", "#menu-btn", function () {
        $(".hem-menu").toggle("slow")
    });

    var default_stocks = {
        "AAPL": {
            "BuyPrice": "139.89",
            "Quantity": "10",
            "TotalInvest": "1398.90",
            "upWatch": "2",
            "downWatch": "1"
        },
        "MU": {
            "BuyPrice": "26.89",
            "Quantity": "300",
            "TotalInvest": "8067.00",
            "upWatch": "29",
            "downWatch": "1"
        },
        "FB": {
            "BuyPrice": "142.89",
            "Quantity": "20",
            "TotalInvest": "2857.80",
            "upWatch": "10",
            "downWatch": "1"
        }
    };

    function getPortfolioChart(portfolio_chart_array) {
        $('#portfolioChart').empty();

        var arry_for_chart = portfolio_chart_array


        // create data
        var data = arry_for_chart;

        // create a pie chart and set the data
        chart = anychart.pie(data);

        // set the inner radius
        // (to turn the pie chart into a doughnut chart)
        chart.innerRadius("20%");

        // set the position of labels
        chart.labels().position("outside");

        // configure connectors
        chart.connectorStroke({color: "#595959", thickness: 1, solid: "1 1"});

        // disable the legend
        chart.legend(true);

        // set the chart title
        chart.title("Your portfolio breakdown");

        var legend = chart.legend();
        legend.position("top");
        legend.align("left");
        // making the legend vertical
        legend.itemsLayout('vertical');
        // setting the space between the items
        legend.itemsSpacing(0);

        // Get chart padding.
        /*
         var padding = chart.padding();

         padding.top("10px");
         padding.right("10px");
         padding.bottom("10px");
         padding.left("10px");
         */
        // set the container id
        chart.container("portfolioChart");

        // initiate drawing the chart
        chart.draw();


    }

    var stc_panel = '<div class="st_panel"><div class="stc_panel_holder" id="stc_lbl">' +
        '<div class="panel_buttons">' +
        '<div class="chart_groups edit_disable" id="done_icon"><span>Done</span><span><i class="fa fa-check-circle front_icons " aria-hidden="true"></i></span></div>' +
        '<div class="chart_groups" id="edit_icon"><span>Edit</span><span><i class="fa fa-pencil-square-o front_icons" aria-hidden="true"></i></span></div>' +
        '<div class="chart_groups" style="display: none;" id="chart_icon"><span>Chart</span><span><i class="fa fa-line-chart front_icons ichar" aria-hidden="true"></i></span></div>' +
        '<div class="chart_groups" id="trash_icon"><span>Delete</span><span><i class="fa fa-trash front_icons" aria-hidden="true"></i></span></div></div>' +
        '<div class="stc_name pnl-row1" id="stc"></div>' +
        '<div class="pnl-row1-space"><span id="cur_prce_update"></span>(</div> <div class="real_time_change pnl-row1"> <span class="chng_icon_up">' +
        '<i class="fa fa-caret-up up-doen-resize" aria-hidden="true"></i></span><span class="chng_icon_down">' +
        '<i class="fa fa-caret-down up-doen-resize" aria-hidden="true"></i></span> <span class="change_dlr_sign">' +
        '<i class="fa fa-usd icon_size" aria-hidden="true"></i> </span><span class="change_dlr" id="stc_change_dlr"></span>' +
        '</div> <div class="pnl-row1-space">,</div> <div class="real_time_change pnl-row1"> <span class="chng_icon_up">' +
        '<i class="fa fa-caret-up up-doen-resize" aria-hidden="true"></i></span> <span class="chng_icon_down">' +
        '<i class="fa fa-caret-down up-doen-resize" aria-hidden="true"></i></span><span class="change_prcnt_sign">' +
        '<i class="fa fa-percent icon_size" aria-hidden="true"></i></span> <span class="change_prcnt" id="stc_change_prcnt"></span>' +
        '</div> <div class="pnl-row1-space">)</div> <div class="curnt_net_val pnl-row2">' +
        '<div class="net_label">Current Portfolio($) <i class="fa fa-arrow-right" aria-hidden="true"></i></div>' +
        '<div class="net_val" id="stc_net_val"></div> </div> <div class="pnl-row3"><div class="left_por">' +
        '<div class="qty_lbl">Volume</div> <input type="text" id="iput_vol" class="edit_disable"><div class="qty val_spacing" id="stc_qty"></div> </div> <div class="right_por">' +
        '<div class="net_diff_lbl">Difference($)</div> <div class="val_spacing" id="stc_dffrnt"></div> </div> </div>' +
        '<div class="pnl-row4"> <div class="left_part"> <div class="_lbl_enty all_lbls head_lbl_enty">Entity</div>' +
        '<div class="invest_prce_lbl all_lbls head_lbl_invest">Invested@($)</div>' +
        '<div class="curnt_prce_lbl_head all_lbls head_lbl_current">Current@($)</div> </div> <div class="right_part">' +
        '<div class="chld_row1"> <div class="curnt_prce_lbl all_lbls"> <div class=" ">Price</div> </div> <div class="val_container">' +
        '<div class="invest_prce all_lbls val-width" id="stc_invest_lbl"></div><input type="text" id="iput_prce"  class="edit_disable">' +
        '<div class="curernt_prce all_lbls val-width" id="stc_currnt_lbl"></div> </div></div>' +
        '<div class="chld_row2"> <div class="all_lbls diff"> <div class=" ">Total($)</div> </div> <div class="total_val_container">' +
        '<div class="invest_val all_lbls val-width" id="stc_invest_val"></div>' +
        '<div class="curernt_val all_lbls val-width" id="stc_current_val"></div> </div> </div> </div> </div> </div></div>';

    function isEmpty(obj) {
        for (var key in obj) {
            if (obj.hasOwnProperty(key))
                return false;
        }
        return true;
    }

    $(".slidingDiv").hide();
    $(".visible_tab").hide();

    $('.show_hide').click(function () {
        $(this).next(".slidingDiv").slideToggle();
        $(this).find('span').toggleClass('hidden_tab visible_tab');
        $(this).find('i').toggleClass('fa-chevron-down fa-chevron-up');
    });
    //------------------------------ New code for add stock -----------------------------------
    $('div.form_fields_holder').find('input').each(function () {
        $(this).blur(function () {
            loop_through_field($(this));
        });
    });

    function append_new_stock() {
        appendstockData(stok_data, userkey, _stk_name, isNwStc);
    }

    // This function need to call only for adding new stock.
    function check_valid_label(stok_data, userkey, _stk_name) {

        var validate_labl = 'https://query.yahooapis.com/v1/public/yql?q=select * from yahoo.finance.quotes where symbol in ("' + _stk_name + '")&format=json&diagnostics=true&env=store://datatables.org/alltableswithkeys';

        $('.main_btns').addClass('none-display-class');
        $.ajax({
            //url: 'http://finance.google.com/finance/info?client=ig&q=nasdaq:MSFT',
            url: validate_labl,
            data: {
                format: 'json'
            },
            dataType: 'jsonp',
            success: function (data) {
                //console.log(data);
                //Checking that label is returning or note.
                var validateLbl = data.query.results.quote.DaysHigh;
                if (validateLbl != null && validateLbl != 'undefined' && validateLbl) {

                    // Emptying the form fields.
                    $('div.form_fields_holder').find('input').each(function () {
                        $(this).val("");
                    });
                    var isNwStc = true;
                    appendstockData(stok_data, userkey, _stk_name);
                }
                else {
                    $('#addNew_stock_modal').removeClass('open');
                    $('#raiselabelerror').trigger('click');
                }
                $('.main_btns').removeClass('none-display-class');
            },
            error: function (xhr, textStatus) {

                console.log(xhr.status);
            },
            type: 'GET'
        })
    }

    // Loop through the all input to validate the value.
    function loop_through_field($inputField) {
        var resultFlag;
        var dataAttr = $inputField.data("intype");
        //console.log($inputField);
        if (dataAttr == 'text') {
            var regex_alphabet = /^([A-Za-z])*$/;
            if ($inputField.val().match(regex_alphabet) && $inputField.val().length > 0) {
                //console.log("look good");
                resultFlag = true;
                $inputField.removeClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").addClass("init_disable");

            }
            else {
                //console.log("look not good");
                $inputField.addClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                resultFlag = false;
            }
            return resultFlag;
        }
        else if (dataAttr == 'alphanum') {
            var regex_alphanum = /^([A-Za-z0-9])*$/;
            if ($inputField.val().match(regex_alphanum)) {
                resultFlag = true;
                //console.log("look good");
                $inputField.removeClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").addClass("init_disable");
            }
            else {
                //console.log("look not good");
                $inputField.addClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                resultFlag = false;
            }
            return resultFlag;
        }
        else if (dataAttr == 'num') {
            var regex_num = /^-?\d+(?:\.\d+)?$/;
            if ($inputField.val().match(regex_num)) {
                resultFlag = true;
                //console.log("look good");
                $inputField.removeClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").addClass("init_disable");
            }
            else {
                //console.log("look not good");
                $inputField.addClass("errborderclass");
                $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                resultFlag = false;
            }
            return resultFlag;
        }
        else if (dataAttr == 'mail') {
            var regex_num = /^-?\d+(?:\.\d+)?$/;
            if ($inputField.val()) {
                var emailflg = IsValidEmail($inputField.val());
                if (IsValidEmail($inputField.val())) {
                    // Valid email
                    //console.log("Valid email id");
                    resultFlag = true;
                    //console.log("look good");
                    $inputField.removeClass("errborderclass");
                    $inputField.parent().siblings(".icon-tip").addClass("init_disable");
                }
                else {
                    //Invalid email
                    //console.log("In-Valid email id");
                    $inputField.addClass("errborderclass");
                    $inputField.parent().siblings(".icon-tip").removeClass("init_disable");
                    resultFlag = false;
                }
            }

            return resultFlag;
        }
    }

    function IsValidEmail(email) {
        var regex = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
        return regex.test(email);
    }

    function copyvalforedit($element) {
        var stok_lbl = $element.parent().next().text(); //FB
        stok_lbl = "stc_lbl_" + stok_lbl;
        var stc_id = $element.parent().parent().attr('id'); //stc_lbl_FB
        if (stc_id == stok_lbl) {
            var st_Name = $element.parent().next().text();
            var st_Price = $element.parent().parent().find('#stc_invest_lbl').text();
            var st_Qty = $element.parent().parent().find('#stc_qty').text();

            var get_local_stocks = localStorage.getObject("stockObject123");
            var get_local_stocks = JSON.parse(get_local_stocks);
            var st_Pos = get_local_stocks[st_Name]["upWatch"];
            var st_Neg = get_local_stocks[st_Name]["downWatch"];

            $('.stc_name_txt').val(st_Name);
            $('.stc_price_txt').val(st_Price);
            $('.stc_qty_txt').val(st_Qty);

            $('.stc_pos').val(st_Pos);
            $('.stc_neg').val(st_Neg);
        }
    }

    // Validate the new user and new stock fields.
    function validateEachInput(isNewuser) {
        var trueFlag = 0;
        var $head_element;
        if (isNewuser) {
            $head_element = $('div#newUsrFields');
        }
        else {
            $head_element = $('div#newStockFields');
        }
        $head_element.find('input').each(function () {

            var getValidFlag = loop_through_field($(this));
            if (getValidFlag) {
                //trueFlag = 0;
            }
            else {
                trueFlag++;
            }
        });
        return trueFlag;
    }

    //-------------------- Above is for new stock add -------------------
    var api_string;
    var getkey_from_modal = "";
    var notifycounter = 0;

    $("body").on("click", "#add_stc", function () {
        $('#add_new_stock').trigger('click');
    });
    $("body").on("click", "#trash_icon", function () {
        $('#add_new_stock').trigger('click')
        copyvalforedit($(this));

        $('#getStockVal').addClass('none-display-class');
        $('#updateStockVal').addClass('none-display-class');
        $('#deleteStock').removeClass('none-display-class');

        $('.edit_stock_header').addClass('none-display-class');
        $('.delete_stock_header').removeClass('none-display-class');
        $('.add_stock_header').addClass('none-display-class');
    });
    // Mobile Click add stock
    $("body").on("click", "#add_stc_m", function () {
        $('#add_new_stock').trigger('click');
    });
    // Mobile Click new user
    $("body").on("click", "#new_usr_m", function () {
        $('#sign_up_user').trigger('click');
    });


    $("body").on("click", "#stop_timer", function () {
        clearloop();
    });
    $("body").on("click", "#edit_icon", function () {

        $('#add_new_stock').trigger('click')
        $("#stok_name_lbl").prop("readonly", true);
        copyvalforedit($(this));

        $('#getStockVal').addClass('none-display-class');
        $('#updateStockVal').removeClass('none-display-class');
        $('#deleteStock').addClass('none-display-class');

        $('.edit_stock_header').removeClass('none-display-class');
        $('.delete_stock_header').addClass('none-display-class');
        $('.add_stock_header').addClass('none-display-class');


    });
    $("body").on("click", "#add_new_stock", function () {

        $("#stok_name_lbl").prop("readonly", false);
        $("#stok_name_lbl").removeAttr('readonly');
        var get_volume = $(this).parent().parent().find("#stc_qty").text();
        var get_invest_price = $(this).parent().parent().find("#stc_invest_lbl").text();

        $('div.form_fields_holder').find('input').each(function () {
            $(this).val("");
        });

        // Hide buttons
        $('#updateStockVal').addClass('none-display-class');
        $('#deleteStock').addClass('none-display-class');
        $('#getStockVal').removeClass('none-display-class');

        // Hide headers
        $('.edit_stock_header').addClass('none-display-class');
        $('.delete_stock_header').addClass('none-display-class');
        $('.add_stock_header').removeClass('none-display-class');

    });
    $("body").on("click", "#get_sec_key", function () {
        getkey_from_modal = $('#scrtkey').val();

        var validatekeyFlag = checkUnqKey(getkey_from_modal);
        if (validatekeyFlag) {

            $('#get_usr_keyModal').removeClass('open');
            $('#scrtkey').val("");
            get_user_data(getkey_from_modal);
        }
    });

    //  onclick add new stock button on modal
    $("body").on("click", "#getStockVal", function () {
        $('.panel_buttons').addClass('none-display-class');
        var Is_New_stock = true;

        processNewStockData(Is_New_stock);
    });

    // on click update button modal.
    $("body").on("click", "#updateStockVal", function () {
        $('.panel_buttons').addClass('none-display-class');
        var Is_New_stock = false;

        processeditedStockData(Is_New_stock)

    });
    // Onclick delete button on modal
    $("body").on("click", "#deleteStock", function () {
        $('.panel_buttons').addClass('none-display-class');
        var _dl_sName = $('.stc_name_txt').val();
        deletestock(_dl_sName);
    });

    // Onclick new portfolio/ new user.
    $("body").on("click", "#newportfolio", function () {
        // Calling function to process new user data.
        processNew_user_form();
    });
    // Function to valid the user unique key.
    function checkUnqKey(uerKey) {

        if (typeof uerKey != 'undefined' && uerKey) {
            return true;
        }
        else {
            return false;
        }
    }

    // Process to perform analysis of new user signup form and API call.
    function processNew_user_form() {
        var newuser = true;
        var getValiduserinfo = validateEachInput(newuser);
        if (getValiduserinfo == 0) {
            var newUser = {};
            //console.log("Inside the new user signup form.");
            var fName = $('.fname').val();
            var lName = $('.lname').val();
            var phone_num = $('.tel').val();

            var emailId = $('.email').val();
            var secretKey = $('.s_key').val();

            if (fName && lName && phone_num && emailId && secretKey) {
                newUser["first_name"] = fName;
                newUser["last_name"] = lName;
                newUser["phone_num"] = phone_num;
                newUser["emailID"] = emailId;
            }
            firstTimeUsrData(default_stocks, secretKey, newUser)

        }
        else {
            console.log("There is an error.");
        }
    }

    // Get local data from local storage.
    function getlocaldata() {
        var get_local_data = localStorage.getObject("stockObject123");
        var parsingJson = JSON.parse(get_local_data);
        var validate_local_data = isEmpty(parsingJson);
        if (!validate_local_data) {
            // Local storage has stock data.
            return parsingJson;
        }
    }

    // Get the tickers for api call and also appendind the stock panel to the container.
    function getStockVals(StockDetailsArray, page_flag) {
        //
        var tickers = "";

        var stckName;
        if (page_flag) {
            $('.stc_panel_container').empty();
            for (var key in StockDetailsArray) {

                stckName = key;
                $('.stc_panel_container').append(stc_panel);
                var id_per_stc = "";
                id_per_stc = $('#stc_lbl').attr('id');
                id_per_stc = id_per_stc + "_" + key;
                $('#stc_lbl').attr("id", id_per_stc);

                var id_panel = $('.stc_panel_holder').find('#stc');
                id_panel = "stc_" + key;
                $('.stc_panel_holder').find('#stc').attr("id", id_panel);

                $('.stc_panel_holder').find('#' + id_panel).text(key);
                tickers = tickers + stckName + ",";
            }
        }
        else {
            for (var key in StockDetailsArray) {

                stckName = key;
                tickers = tickers + stckName + ",";
            }
        }

        tickers = tickers.substring(0, tickers.length - 1);
        return tickers;
        // convertToServerTimeZone(tickers, StockDetailsArray);
        //console.log(tickers);
    }

    // Get secret key from local storage.
    function getJsonkey() {
        var getkey_fromdb = localStorage.getObject("userUniqKey123");
        if (getkey_fromdb) {
            // key found un json and also data set in local storage
            validate_userkey();
        }
        else {
            //get_usr_keyModal
            $('#get_usr_keyModal').removeClass('open');
            // Data not found in json want to offer for new user.
            $("#newUser_key_popup").trigger("click");
        }
    }


    // Apply color based on current portfolio value.
    function apply_color($element, elem_val, icon_flag) {
        if (elem_val > 0.000) {
            $element.css('color', 'green');
            if (icon_flag) {
                var geticon = $element.parent().find('.fa').css('color', 'green');
                //console.log(geticon);
                $element.parent().find('.fa-caret-down').css('display', 'none');
            }
        }
        else {
            $element.css('color', 'red');
            if (icon_flag) {
                var geticon = $element.parent().find('.fa').css('color', 'red');
                //console.log(geticon);
                $element.parent().find('.fa-caret-up').css('display', 'none');
            }
        }

    }


    // Calling timer loop for every one minute call for stock data.
    function calltimerloop() {
        //set the interval
        timerObj = setInterval(function () {
            var _lc_stockdata_timer = getlocaldata();
            if (isEmpty(_lc_stockdata_timer)) {
                // Object is empty needs to ask user.
            }
            else {

                var _lc_stockdata = "";
                var getApicallData = "";

                var page_load = false;
                var _lc_stockdata = getlocaldata();
                getApicallData = getStockVals(_lc_stockdata, page_load);

                callAPI(getApicallData, _lc_stockdata);
            }

        }, 30000);
    }

    function clearloop() {
        clearInterval(timerObj);
    }

    // google  API call for each data

    function callAPI(apiStringVal, stocksObjectVal) {

        console.log("====== API Call ==========");
        var total_networth = 0;
        var total_invest = 0;
        var prft_loss = 0;

        //console.log(apiStringVal);
        $(".eachstock").empty();
        if (apiStringVal) {

            $(".table_data_row").remove();

            var testurl = 'https://finance.google.com/finance/info?client=ig&q=nasdaq:' + apiStringVal + '';
            //console.log(testurl);
            $.ajax({
                url: testurl,
                data: {
                    format: 'json'
                },
                error: function () {
                    console.log("Error while getting data");
                },
                dataType: 'jsonp',
                success: function (data) {

                    var portfolio_chart_arry = [];
                    $(".table_data_row").remove();
                    if (notifycounter == 0) {
                        var generalStr = 'Hey this is headsup from notification';
                        var stockIconImage = "images/_uparrow.png";
                        //notifyMe(generalStr, stockIconImage);
                    }

                    $.each(data, function (index, value) {
                        var last_change_percentage = 0;
                        var last_change = 0;

                        var priceDifference = 0;
                        var stock_name = 0; // Stock NAme
                        var last_price = 0; // Last Price
                        var last_change_percentage_u = 0;

                        stock_name = value["t"]; // Stock NAme
                        last_price = value["l"]; // Last Price
                        last_change = value["c"]; // Change since last price
                        last_change_percentage = value["cp"]; // Change percentage

                        last_change_percentage_u = value["cp_fix"]; // Change percentage

                        var dayhigh = value["_hi"];
                        var daylow = value["_lo"];

                        var comparePrice;
                        var compareQty;
                        var compareInvetment;

                        var currentPrice = 0;
                        var currentInvestmentValue = 0;

                        var stockup;
                        var stockdown;

                        var current_portfolio_status;
                        // calling the localstock data for comparison
                        $.each(stocksObjectVal, function (sindex, svalue) {
                            if (sindex == stock_name) {

                                //console.log("Found");
                                comparePrice = svalue["BuyPrice"];
                                compareQty = svalue["Quantity"];
                                compareInvetment = svalue["TotalInvest"];

                                var temp_invest = parseFloat(compareInvetment);
                                // Calculate total investment as per invested.
                                total_invest = total_invest + temp_invest;
                                //total_invest = total_invest.toFixed(2);

                                stockup = svalue["upWatch"];
                                var upprice = stockup;
                                //console.log("stockup Proce:" + stockup);
                                stockdown = svalue["downWatch"];
                                var downprice = "-" + stockdown;
                                //console.log("StockName: " + stock_name + " stockup check: " + stockup + " stockdown check: " + stockdown);
                                currentPrice = last_price - comparePrice;
                                var current_diff = currentPrice.toFixed(2);
                                currentPrice = currentPrice.toFixed(2);

                                currentInvestmentValue = last_price * compareQty;
                                currentInvestmentValue = currentInvestmentValue.toFixed(2);

                                // Calculate total investment as per current change.
                                var tmp_curnt_invest = parseFloat(currentInvestmentValue);
                                total_networth = total_networth + tmp_curnt_invest;
                                //total_networth = total_networth.toFixed(2);

                                var initialinvestment = comparePrice * compareQty;
                                initialinvestment = initialinvestment.toFixed(2);

                                current_portfolio_status = currentInvestmentValue - initialinvestment;
                                current_portfolio_status = current_portfolio_status.toFixed(2);

                                $(".stc_panel_container").find(".st_panel").each(function () {
                                    var is_icon_color_req;
                                    var $stock_panel = $(this).find("#stc_lbl_" + stock_name);
                                    // Empty the textbox

                                    $stock_panel.find('#stc_change_dlr').text("");
                                    $stock_panel.find('#stc_change_prcnt').text("");
                                    $stock_panel.find('#stc_net_val').text("");
                                    $stock_panel.find('#stc_qty').text("");
                                    $stock_panel.find('#stc_dffrnt').text("");

                                    $stock_panel.find('#stc_invest_lbl').text("");
                                    $stock_panel.find('#stc_currnt_lbl').text("");

                                    $stock_panel.find('#stc_invest_val').text("");
                                    $stock_panel.find('#stc_current_val').text("");
                                    $stock_panel.find('#cur_prce_update').text("");

                                    //----------------------------------------------
                                    $stock_panel.find('#cur_prce_update').text(":" + last_price);
                                    $stock_panel.find('#stc_change_dlr').text(last_change);
                                    is_icon_color_req = true;
                                    apply_color($stock_panel.find('#cur_prce_update'), last_change, is_icon_color_req);

                                    apply_color($stock_panel.find('#stc_change_dlr'), last_change, is_icon_color_req);

                                    if (current_portfolio_status > 0.00) {
                                        $stock_panel.parent().css('background-color', '#f3fdf5');
                                        //$(this).css('background-color','#f3fdf5');
                                    }
                                    else {
                                        $stock_panel.parent().css('background-color', '#fff4f4');
                                        //$(this).css('background-color','#fff4f4');
                                    }

                                    $stock_panel.find('#stc_change_prcnt').text(last_change_percentage);
                                    apply_color($stock_panel.find('#stc_change_prcnt'), last_change_percentage, is_icon_color_req);

                                    is_icon_color_req = false;
                                    $stock_panel.find('#stc_net_val').text(current_portfolio_status);
                                    apply_color($stock_panel.find('#stc_net_val'), current_portfolio_status, is_icon_color_req);

                                    $stock_panel.find('#stc_qty').text(compareQty);
                                    $stock_panel.find('#stc_dffrnt').text(currentPrice);

                                    $stock_panel.find('#stc_invest_lbl').text(comparePrice);
                                    $stock_panel.find('#stc_currnt_lbl').text(last_price);

                                    $stock_panel.find('#stc_invest_val').text(compareInvetment);
                                    $stock_panel.find('#stc_current_val').text(currentInvestmentValue);

                                });

                                $('#stockTab tr:last').after(
                                    '<tr class="table_data_row" ><td>' + stock_name + '</td><td>' + compareQty + '</td>' +
                                    '<td>' + compareInvetment + '</td><td>' + comparePrice + '</td><td>' + last_price + '</td>' +
                                    '<td>' + current_diff + '</td><td>' + last_change + '</td><td>' + upprice + '</td>' +
                                    '<td>' + downprice + '</td><td>' + currentInvestmentValue + '</td></tr>');

                                // pass the value to draw portfolio chart function.
                                portfolio_chart_arry.push({
                                    x: stock_name,
                                    value: currentInvestmentValue
                                });

                            }
                            var check_chart_hoder = $('.each_chart_holder').length;
                            //console.log($('.each_chart_holder').length);
                            if (check_chart_hoder > 0) {
                                $('i.ichar').removeAttr("style");
                                $('i.ichar').addClass("enable_show_chart_btn");
                            }
                        });

                        //console.log("**********************************************************************************************")
                        // console.log("Stock Name "+stock_name +" : Stock Last Price "+last_price + " : Change since last price $"+last_change+" : Change in percentage "+last_change_percentage+"% : Unknown percentage "+last_change_percentage_u+"%");

                        //console.log(last_change_percentage);
                    });

                    // To get net investment and value
                    //console.log("Total Invested: " + total_invest.toFixed(2));
                    //console.log("Total Current networth: " + total_networth.toFixed(2));
                    prft_loss = total_networth - total_invest;
                    prft_loss = parseFloat(prft_loss.toFixed(2));
                    console.log("Total Current profit or loss: " + prft_loss);

                    $('#invested_net_val').text(total_invest.toFixed(2));
                    $('#current_net_val').text(total_networth.toFixed(2));
                    $('#differ_net_val').text(prft_loss);

                    $('#invested_net_val_m').text(total_invest.toFixed(2));
                    $('#current_net_val_m').text(total_networth.toFixed(2));
                    $('#differ_net_val_m').text(prft_loss);
                    if (prft_loss > 0) {
                        $('#differ_net_val').css('color', 'green');
                        $('#differ_net_val_m').css('color', 'green');
                    }
                    else {
                        $('#differ_net_val').css('color', 'red');
                        $('#differ_net_val_m').css('color', 'green');
                    }


                    notifycounter++;
                    //enable_chart_btn();
                    getPortfolioChart(portfolio_chart_arry);
                    $('.main_btns').removeClass('none-display-class');

                    $(".eachstock").find(".perstock").each(function () {
                        var stc_last_price = $(this).find("span.cp_val").text();
                        if (stc_last_price > 0.0) {
                            $(this).find("i#downar").css('display', 'none');
                            $(this).find("span.cp_val").css('color', 'green');
                            $(this).find("span.sign_vals").css('color', 'green');
                            $(this).addClass("positive_stocks");
                            $(this).removeClass("negative_stocks");
                        }
                        else {
                            $(this).find("i#upar").css('display', 'none');
                            $(this).find("span.cp_val").css('color', 'red');
                            $(this).find("span.sign_vals").css('color', 'red');
                            $(this).addClass("negative_stocks");
                            $(this).removeClass("positive_stocks");
                        }
                        //console.log(stc_last_price);
                    });
                    if (inittimer == 0) {
                        inittimer++;

                        //getLocalStorage_chart();

                        // Calling timer loop for every one minute
                        calltimerloop();

                    }

                },
                type: 'GET'
            });

        }


    }

    // Copy all input values of stocks input form to the object.
    function copyvaluetoObject() {
        var stocktable = {};

        var sName = $('.stc_name_txt').val();
        var sPrice = $('.stc_price_txt').val();
        var sQty = $('.stc_qty_txt').val();

        var sPos = $('.stc_pos').val();
        var sNeg = $('.stc_neg').val();

        if (sName && sPrice && sQty) {
            var StcName = $('.stc_name_txt').val();

            stocktable[StcName] = {};
            stocktable[StcName]["BuyPrice"] = sPrice;
            stocktable[StcName]["Quantity"] = sQty;
            var Total_Invet = sQty * sPrice;
            stocktable[StcName]["TotalInvest"] = Total_Invet.toFixed(2);
        }
        if (sPos) {
            stocktable[StcName]["upWatch"] = $('.stc_pos').val();
        }
        else {
            stocktable[StcName]["upWatch"] = "0";
        }
        if (sNeg) {
            stocktable[StcName]["downWatch"] = $('.stc_neg').val();
        }
        else {
            stocktable[StcName]["downWatch"] = $('.stc_neg').val();
        }

        return stocktable;
    }

    // Function to process the udapte data from edit button
    function processeditedStockData(isnewStockFlag) {
        var newUsr = false;
        var stock_form_data;
        // validate each input so calling function to validate. If getValidFlag == 0 than looks correct.
        var getValidFlag = validateEachInput(newUsr);
        var stock_storage = {};
        var validlabl

        // If every field is valid of each input that it is coming for this condition.
        if (getValidFlag == 0) {

            // we are sending empty object to get the stock data from the form object.
            stock_form_data = copyvaluetoObject();

            // Get the uerkey name
            var _lckey_newData = localStorage.getObject("userUniqKey123");

            // Check the local storage key is empy or not.
            var keyFlag = checkUnqKey(_lckey_newData);

            // Get the stocklabel name
            var stock_toupdate = $('#stok_name_lbl').val();

            updated_stc_obj = stock_form_data[stock_toupdate];

            if (keyFlag) {

                $('div.form_fields_holder').find('input').each(function () {
                    $(this).val("");
                });
                appendstockData(updated_stc_obj, _lckey_newData, stock_toupdate);

            }

        }
    }

    // Function to check each and every field for new stock form.
    function processNewStockData(isnewStockFlag) {
        var newUsr = false;
        var stock_form_data;
        // validate each input so calling function to validate. If getValidFlag == 0 than looks correct.
        var getValidFlag = validateEachInput(newUsr);
        var stock_storage;
        var extract_stc_obj;

        // If every field is valid of each input that it is coming for this condition.
        if (getValidFlag == 0) {

            // Since we are appending the stock.
            stock_form_data = copyvaluetoObject();

            var _lckey_newData = localStorage.getObject("userUniqKey123");
            // Check the local storage key is empy or not.
            var keyFlag = checkUnqKey(_lckey_newData);

            var stock_tovalid = $('.stc_name_txt').val();
            extract_stc_obj = stock_form_data[stock_tovalid];
            //console.log(extract_stc_obj);
            if (keyFlag) {
                check_valid_label(extract_stc_obj, _lckey_newData, stock_tovalid);
            }

        }
    }

    // Function to delete the daata
    function deletestock(_stocname) {
        var _delete_data_key = localStorage.getObject("userUniqKey123");
        var validkeyFlag = checkUnqKey(_delete_data_key);
        if (validkeyFlag) {

            var _deletedata = {"usrKey": _delete_data_key, "stcName": _stocname};
            _deletedata = JSON.stringify(_deletedata);
            $.ajax({
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                url: 'https://stok-dashboard.herokuapp.com/deleteJson',
                //url: 'http://localhost:3000/deleteJson',
                data: _deletedata,
                dataType: "json",
                crossDomain: true,
                complete: function () {
                    //called when complete
                    console.log('Delete user process complete');
                    //location.reload();

                },
                success: function (data) {
                    //console.log("successfully data deleted json file");
                    $('#addNew_stock_modal').removeClass('open');
                    clearloop();
                    get_user_data(_delete_data_key);

                },
                error: function (textStatus, errorThrown) {
                    console.log("Error");
                }
            });
        }
    }

    // Function to append the new stock data to JSON. Assume that usersecret key exist.
    // Function to edit the existing stock data.
    function appendstockData(_stockData, encodedUsrKey, _stcName) {

        $('.main_btns').addClass('none-display-class');

        var Dbdata = {"usrKey": encodedUsrKey, "usrStcData": _stockData, "stc_label": _stcName};
        Dbdata = JSON.stringify(Dbdata);
        //console.log(Dbdata);

        var post_object = {};
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            url: 'https://stok-dashboard.herokuapp.com/postJson',
            //url: 'http://localhost:3000/postJson',
            data: Dbdata,
            dataType: "json",
            crossDomain: true,
            complete: function () {
                //called when complete
                console.log('get labels for news process complete');
            },
            success: function (res) {
                //console.log(res);
                $('#addNew_stock_modal').removeClass('open');
                clearloop();
                get_user_data(encodedUsrKey);
            },
            error: function () {
                // Data not found in json want to offer for new user.
                console.log("Error while retriving data");
            },
        });


    }

    // Store the JSON data of user with unique key.
    function firstTimeUsrData(_defaultStkdata, _userKey, _userInfoJson) {
        $('.main_btns').addClass('none-display-class');
        var encodedUsrKey = _userKey;
        var data = {"usrKey": encodedUsrKey, "usrStcData": _defaultStkdata, "userInfo": _userInfoJson}
        data = JSON.stringify(data);

        //console.log(data);
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            url: 'https://stok-dashboard.herokuapp.com/newPostJson',
            //url: 'http://localhost:3000/newPostJson',
            data: data,
            dataType: "json",
            crossDomain: true,
            success: function (data) {
                $('#new_signup').removeClass('open');
                //console.log("successfully data stored in json file");
                $('#new_signup').removeClass('open');
                clearloop();
                get_user_data(_userKey);
            },
            error: function (textStatus, errorThrown) {
                console.log("Error");
            }
        });
    }

    function getnewsfeed(lblArray, nws_count) {
        //console.log("Get latest news.");
        var nws_lbl_counter = nws_count;
        $('.nw_container').empty();
        var news_obj = {};
        var currnt_d = new Date();

        var local_lbl_nws_arry = lblArray;
        var arr_length = lblArray.length;

        var each_item = '<div class="each_news_holder">' +
            '<div class="nw_desc_holder" id="nw_desc_holder">' +
            '<div class="nw_desc" id="nw_desc"></div>' +
            '</div>' +
            '</div>';

        var val = local_lbl_nws_arry[nws_lbl_counter];

        var proxyUrl = 'https://cors-anywhere.herokuapp.com/',
            targetUrl = 'https://www.google.com/finance/company_news?q=' + val + '&output=rss';

        $.get(proxyUrl + targetUrl, function (data) {
            news_obj[val] = {};
            var itemcount = 0;
            $(data).find("channel").find("item").each(function () {

                news_obj[val]["item" + itemcount] = {};
                var article_d = new Date($(this).find("pubDate").text());
                var article_day = article_d.getDate();
                var article_yr = article_d.getFullYear();

                for (var i = 0; i < 4; i++) {
                    var decrese_date = currnt_d.getDate() - i;
                    var current_yr = currnt_d.getFullYear()
                    if (current_yr == current_yr) {
                        if (decrese_date == article_day) {
                            news_obj[val]["item" + itemcount]["n_title"] = $(this).find("title").text();
                            news_obj[val]["item" + itemcount]["n_pubdate"] = $(this).find("pubDate").text();
                            news_obj[val]["item" + itemcount]["n_link"] = $(this).find("link").text();
                            news_obj[val]["item" + itemcount]["n_desc"] = $(this).find("description").text();

                            var testid = "item-" + itemcount + "-" + val;

                            itemcount++;
                            each_item = '<div class="each_news_holder">' +
                                '<div class="nw_title_holder news_title" id="' + testid + '" data-url="' + $(this).find("link").text() + '">' + $(this).find("title").text() + '</div>' +
                                '<div class="nw_desc_holder" id="nw_desc_holder">' +
                                '<div class="nw_desc" id="nw_desc">' + $(this).find("description").text() + '</div>' +
                                '</div>' +
                                '</div>';
                            $('.nw_container').append(each_item);
                        }
                    }

                }
            });

            $('.nw_container').find('.each_news_holder').each(function () {
                var desc = $(this).find('.nw_desc').find('div');
                desc.find('a').addClass("init_disable");

                var descTxt = desc.find('div').text();
                descTxt = descTxt.substring(0, 150) + " .. ";
                desc.find('div').text(descTxt);

                desc.find('div').removeAttr('style');
                desc.find('div').css('width', '90% !important');
            });

        });
        nws_lbl_counter++;
        if (arr_length > nws_lbl_counter) {
            getnewsfeed(local_lbl_nws_arry, nws_lbl_counter);
        }
    }

    $("body").on("click", 'div[id^="item-"]', function () {
        //console.log($(this));
        var target_url = $(this).data('url');
        window.open(target_url, '_blank');
    });
    // Remainng thing is on click news should open.

    var getLblsArry = [];

    function getlabelsfornews(_usrkey_labels) {

        // Make container Empty
        $('.nw_container').empty();
        var news_counter = 0;
        getnewsfeed(_usrkey_labels, news_counter);
    }

    function callNewsInterval() {

        var locla_nws_arry = localStorage.getObject("nwsLbls");
        locla_nws_arry = locla_nws_arry.split(",");

        //set the interval
        timerObj = setInterval(function () {

            getlabelsfornews(locla_nws_arry)

        }, 300000);

    }

    function resetlocalStorage(get_stc_object, get_user_key) {

        // Remove the existing local storage.

        localStorage.removeItem("stockObject123");
        localStorage.removeItem("userUniqKey123");

        localStorage.setObject("stockObject123", "");
        localStorage.setObject("userUniqKey123", "");

        // Data set in local storage.
        var jsonObj = JSON.stringify(get_stc_object);
        localStorage.setObject("stockObject123", jsonObj);
        localStorage.setObject("userUniqKey123", get_user_key);

        /*
         var repaint_alldivs_first = true;
         getStockVals(get_stc_object, repaint_alldivs_first);
         */
        // Reload the chart (52 weeks)


        // Ultimately calling the validateuserkey function and callApi function
        initialapicall()
        //getJsonkey();

    }

    function initialapicall() {
        var page_load = true;

        var nws_lbl_array;

        //console.log("We have the key:");
        // Get the string for api call.
        var _lc_stockdata = "";
        var getApicallData = "";

        var _lc_stockdata = getlocaldata();
        getApicallData = getStockVals(_lc_stockdata, page_load);

        /* Code for string nws lables */
        api_string = "";
        api_string = getApicallData;
        nws_lbl_array = api_string.split(",");

        localStorage.setObject("nwsLbls", nws_lbl_array);
        getlabelsfornews(nws_lbl_array);

        $("div.panel_buttons").find("#chart_icon").addClass("none-display-class");
        getLocalStorage_chart();

        // Call for API
        callAPI(getApicallData, _lc_stockdata);

        callNewsInterval();

        $('#get_my_key').addClass('none-display-class');
        $('#get_key_m').addClass('none-display-class');
    }

    var err_counter = 0;

    function get_user_data(usrky) {

        // key is valid
        $.ajax({
            type: "GET",
            dataType: "json",
            data: '',
            contentType: "application/json; charset=utf-8",
            url: 'https://stok-dashboard.herokuapp.com/getuserJson/' + usrky,
            //url: 'http://localhost:3000/getuserJson/' + usrky,
            complete: function () {

                //console.log('to check key is there or not in json.');
                $('.main_btns').removeClass('none-display-class');
            },
            success: function (res) {

                if (isEmpty(res)) {
                    // Object is empty (Would return true in this example)
                }
                else {
                    // Check if stocks data are empty or not?
                    if (isEmpty(res.data)) {
                        // Object is empty (Would return true in this example)
                        console.log("Json and local browser data is not matching..");
                    }
                    else {
                        //var storeas_json = JSON.stringify(res.data);
                        //.log(res.name);
                        //console.log(res.data);
                        resetlocalStorage(res.data, res.name);
                    }
                }
            },
            error: function () {
                err_counter++;
                // Data not found in json want to offer for new user.
                console.log("Either local storage or json data is not matching.");
                $('#add_new_stock').addClass('none-display-class');
                $('#add_stc_m').addClass('none-display-class');


                if (err_counter > 1) {
                    $("#newUser_key_popup").trigger("click");
                }
                else {
                    $("#get_key_popup").trigger("click");
                }
            },
        });


    }

    validate_userkey();
    //
    function validate_userkey() {
        var get_local_storage = localStorage.getObject("userUniqKey123");
        var validatekeyFlag = checkUnqKey(get_local_storage);
        if (validatekeyFlag) {
            get_user_data(get_local_storage);
        }
        else {
            $("#get_key_popup").trigger("click");
        }


    }
});